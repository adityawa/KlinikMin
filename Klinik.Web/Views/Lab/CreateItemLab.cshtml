@model Klinik.Entities.Form.FormExamineLabModel

@{
    ViewBag.Title = "CreateItemLab";
}


<div>
    <button id="btnSave" class="btn btn-primary"><i class="fa fa-save"></i>@Klinik.Resources.UIMessages.Save</button>
    <button id="btnBack" class="btn btn-primary"><i class="fa fa-backward"></i>@Klinik.Resources.UIMessages.Cancel</button>
</div>
<br /><br />
<section class="panel position-fixed">
    <header class="panel-heading">
        <div class="panel-actions">
            <a href="#" class="fa fa-caret-down"></a>
        </div>
        <h5 class="panel-title">Form @Klinik.Resources.UIMessages.Add Lab Item</h5>
    </header>
    <div class="panel-body">
        <div class="form-group">
            <label class="col-md-1 control-label" for="inputDefault">@Klinik.Resources.UIMessages.MRNumber</label>
            @Html.HiddenFor(x => x.Id, new { @Id = "IdRegistration" })
            @Html.HiddenFor(x => x.LoketData.Id)
            @Html.HiddenFor(x => x.FormMedicalID, new { @id = "frmMedId" })
            <div class="col-md-2">
                @Html.TextBoxFor(x => x.PatientData.MRNumber, new { @class = "form-control", @id = "tbFormMedical", @readonly = "readonly" })
            </div>
            <label class="col-md-1 control-label" for="inputDefault">@Klinik.Resources.UIMessages.PatientName</label>
            <div class="col-md-2">
                @Html.TextBoxFor(x => x.PatientData.Name, new { @class = "form-control", @id = "tbPatientName", @readonly = "readonly" })
            </div>
            <label class="col-md-1 control-label " for="inputDefault" style="text-align:left">
                @Klinik.Resources.UIMessages.Birthdate
            </label>
            <div class="col-md-3">
                @Html.TextBoxFor(p => p.PatientData.BirthDateStr, new { @class = "form-control", @id = "tbPatientBirthDate", @readonly = "readonly" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-1 control-label" for="inputDefault">@Klinik.Resources.UIMessages.BloodType</label>
            <div class="col-md-2">
                @Html.TextBoxFor(x => x.PatientData.BloodType, new { @class = "form-control", @id = "tbBlood", @readonly = "readonly" })
            </div>
            <label class="col-md-1 control-label" for="inputDefault">@Klinik.Resources.UIMessages.Gender</label>
            <div class="col-md-2">
                @Html.TextBoxFor(x => x.PatientData.Gender, new { @class = "form-control", @id = "tbWeight", @readonly = "readonly" })
            </div>
            <label class="col-md-1 control-label" for="inputDefault">
                @Klinik.Resources.UIMessages.Address
            </label>
            <div class="col-md-4">
                @Html.TextAreaFor(x => x.PatientData.Address, new { @class = "form-control", @id = "tbAddress" })
            </div>

        </div>

        <br />
        <h4>Lab Items</h4>
        <div style="width:100%; margin:0 auto">
            <table id="tbLabItem" class="table table-striped table-bordered dt-responsive" cellspacing="0">
                <thead>
                    <tr>
                        <th><input name="select_all" value="1" type="checkbox"></th>
                        <th>@Klinik.Resources.UIMessages.ID</th>
                        <th>@Klinik.Resources.UIMessages.LabItemCategory</th>
                        <th>@Klinik.Resources.UIMessages.Code</th>
                        <th>@Klinik.Resources.UIMessages.Name</th>
                        <th>@Klinik.Resources.UIMessages.Normal</th>
                        <th>@Klinik.Resources.UIMessages.Price</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</section>

@section Scripts {
    <script type="text/javascript">

        $(document).ready(function () {

            toastr.options = {
                "closeButton": false,
                "positionClass": "toast-top-full-width",
                "onclick": null,
                "showDuration": "0",
                "hideDuration": "0",
                "timeOut": "2000",
                "showMethod": "fadeIn"
            };

            $('#btnBack').click(function (e) {
                window.location.href = "/Lab/ListQueueLaboratorium";
            });

            var _idOrg = getUrlVars();
            var rows_selected = [];

            var array = @Html.Raw(Json.Encode(Model.LabItemsId));
            if (array != null && array.length > 0) {
                for (var i = 0; i < array.length; i++) {
                    rows_selected.push(array[i]);
                }
            }

            var table = $('#tbLabItem').DataTable({
                "autoWidth": false,
                "processing": true,
                "serverSide": true,
                "filter": true,
                "orderMulti": false,
                "pageLength": 10,
                "ajax": {
                    "url": "/Lab/GetListLabItem",
                    "type": "POST",
                    "datatype": "json"
                },

                "columnDefs":
                    [

                        {
                            'targets': 0,
                            'searchable': false,
                            'orderable': false,
                            'width': '1%',
                            'className': 'dt-body-center',
                            'render': function (data, type, full, meta) {
                                return '<input type="checkbox">';
                            }
                        },
                        {
                            "targets": [1],
                            "visible": false,
                            "searchable": false,
                            "data": "Id"
                        },

                        {
                            "targets": [2],
                            "searchable": true,
                            "orderable": true,
                            "data": "LabItemCategoryName"
                        },

                        {
                            "targets": [3],
                            "searchable": true,
                            "orderable": true,
                            "data": "Code"
                        },
                        {
                            "targets": [4],
                            "searchable": true,
                            "orderable": true,
                            "data": "Name"
                        },

                        {
                            "targets": [5],
                            "searchable": true,
                            "orderable": false,
                            "data": "Normal"
                        },
                        {
                            "targets": [6],
                            "searchable": false,
                            "orderable": true,
                            "data": "Price"
                        }


                    ],


                'rowCallback': function (row, data, dataIndex) {
                    // Get row ID
                    var rowId = data.Id;

                    //var cek = $.inArray(rowId, rows_selected);
                    //var cek1 = data.Id;

                    if ($.inArray(rowId, rows_selected) != -1) {
                        $(row).find('input[type="checkbox"]').prop('checked', true);
                        $(row).addClass('selected');
                    }
                }
            });

            $('#tbLabItem tbody').on('click', 'input[type="checkbox"]', function (e) {
                var $row = $(this).closest('tr');
                var data = table.row($row).data();
                var rowId = data.Id;
                var index = $.inArray(rowId, rows_selected);
                if (this.checked && index === -1) {
                    rows_selected.push(rowId);
                } else if (!this.checked && index !== -1) {
                    rows_selected.splice(index, 1);
                }

                if (this.checked) {
                    $row.addClass('selected');
                } else {
                    $row.removeClass('selected');
                }
                updateDataTableSelectAllCtrl(table);
                e.stopPropagation();
            });


            $('#tbLabItem').on('click', 'tbody td, thead th:first-child', function (e) {
                $(this).parent().find('input[type="checkbox"]').trigger('click');
            });


            $('thead input[name="select_all"]', table.table().container()).on('click', function (e) {
                if (this.checked) {
                    $('#tbLabItem tbody input[type="checkbox"]:not(:checked)').trigger('click');
                } else {
                    $('#tbLabItem tbody input[type="checkbox"]:checked').trigger('click');
                }

                // Prevent click event from propagating to parent
                e.stopPropagation();
            });


            table.on('draw', function () {
                // Update state of "Select all" control
                updateDataTableSelectAllCtrl(table);
            });


            $('#btnSave').click(function (e) {
                if (window.FormData != undefined) {
                    if (rows_selected.length <= 0) {
                        alert('please specify at least one Lab Item');
                    }
                    else {
                        var form_data = new FormData();
                        form_data.append("FormMedicalId", $('#frmMedId').val());
                        form_data.append("LabItems", JSON.stringify(rows_selected));
                        form_data.append("QueuePoliId", $('#IdRegistration'));
                        $.ajax({
                            type: 'POST',
                            url: '/Lab/AddLabItem',
                            contentType: false,
                            processData: false,
                            data: form_data,
                            async: "true",
                            success: function (result) {
                                if (result.Status == true) {
                                    toastr.success(result.Message);
                                }
                                else {
                                    toastr.error(result.Message);
                                }
                            },
                            error: function (xhr, status, p3, p4) {
                                var err = "Error " + " " + status + " " + p3 + " " + p4;
                                if (xhr.responseText && xhr.responseText[0] == "{")
                                    err = JSON.parse(xhr.responseText).Message;
                                console.log(err);
                            }
                        });
                    }

                }
                else {
                    toastr.error("Your Browser is not support Form Data");
                }
            });

        });



        function updateDataTableSelectAllCtrl(table) {
            var $table = table.table().node();
            var $chkbox_all = $('tbody input[type="checkbox"]', $table);
            var $chkbox_checked = $('tbody input[type="checkbox"]:checked', $table);
            var chkbox_select_all = $('thead input[name="select_all"]', $table).get(0);

            // If none of the checkboxes are checked
            if ($chkbox_checked.length === 0) {
                chkbox_select_all.checked = false;
                if ('indeterminate' in chkbox_select_all) {
                    chkbox_select_all.indeterminate = false;
                }

                // If all of the checkboxes are checked
            } else if ($chkbox_checked.length === $chkbox_all.length) {
                chkbox_select_all.checked = true;
                if ('indeterminate' in chkbox_select_all) {
                    chkbox_select_all.indeterminate = false;
                }

                // If some of the checkboxes are checked
            } else {
                chkbox_select_all.checked = true;
                if ('indeterminate' in chkbox_select_all) {
                    chkbox_select_all.indeterminate = true;
                }
            }
        }

        function getUrlVars() {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            return vars;
        }
    </script>
}

